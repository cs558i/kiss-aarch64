1)  PBP: Add regulator needed for usb
    The schematics indicate that the vcc3v3_s0 voltage is controlled by
    the LDO2 of the RK808 but this isn't true.
    It's controller by a gpio (named lcdvcc_en).
    Remove the name from the RK808 regulator and add a regulator-fixed
    controller by this gpio.
    https://git.eno.space/pbp-uboot.git/commit/?id=fd41e9330cf1635fa3bf4dabdfac42ee1bba963c

2)  rockchip: move usb0 after mmc1 in default boot order
    now that we support booting from USB we should prefer USB boot over eMMC
    boot. we still try to boot from SD cards first.
    https://git.eno.space/pbp-uboot.git/commit/?id=908d441fefc2203affe1bb0d79f75f611888fc1f

diff --git a/arch/arm/dts/rk3399-pinebook-pro.dts b/arch/arm/dts/rk3399-pinebook-pro.dts
index 1234f715c1..f334f9e8ef 100644
--- a/arch/arm/dts/rk3399-pinebook-pro.dts
+++ b/arch/arm/dts/rk3399-pinebook-pro.dts
@@ -125,6 +125,16 @@
 		regulator-always-on;
 	};
 
+	vcc3v3_s0: vcc3v3-s0-regulator {
+		compatible = "regulator-fixed";
+		enable-active-high;
+		gpio = <&gpio1 RK_PC6 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&lcdvcc_en>;
+		regulator-name = "vcc3v3_s0";
+		regulator-always-on;
+	};
+
 	vcc_sys: vcc-sys {
 		compatible = "regulator-fixed";
 		regulator-name = "vcc_sys";
@@ -347,8 +357,8 @@
 				};
 			};
 
-			vcc3v3_s0: SWITCH_REG2 {
-				regulator-name = "vcc3v3_s0";
+			unused: SWITCH_REG2 {
+				regulator-name = "SWITCH_REG2";
 				regulator-always-on;
 				regulator-boot-on;
 				regulator-state-mem {
@@ -484,6 +494,11 @@
 		host_usb3_drv: host-usb3-drv {
 			rockchip,pins = <1 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
 		};
+
+		/* Shared between LCD and usb */
+		lcdvcc_en: lcdvcc-en {
+			rockchip,pins = <1 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
 	};
 };
 
@@ -581,10 +596,12 @@
 };
 
 &usb_host1_ehci {
+	phy-supply = <&vcc3v3_s0>;
 	status = "okay";
 };
 
 &usb_host1_ohci {
+	phy-supply = <&vcc3v3_s0>;
 	status = "okay";
 };
